<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>autoScrollOutput</key>
	<true/>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby

require "#{ENV['TM_SUPPORT_PATH']}/lib/tm/executor"
require "#{ENV['TM_SUPPORT_PATH']}/lib/tm/save_current_document"

CONFIG = {
  'source.c'      =&gt; [ ENV['TM_GCC'] || 'gcc', "-x c             #{ENV['TM_C_FLAGS']      || '-Wall -include stdio.h'}",                                    'c'  ],
  'source.c++'    =&gt; [ ENV['TM_GXX'] || 'g++', "-x c++           #{ENV['TM_CXX_FLAGS']    || '-Wall -include stdio.h -include iostream'}",                  'cc' ],
  'source.objc'   =&gt; [ ENV['TM_GCC'] || 'gcc', "-x objective-c   #{ENV['TM_OBJC_FLAGS']   || '-Wall -include stdio.h -framework Cocoa'}",                   'm'  ],
  'source.objc++' =&gt; [ ENV['TM_GXX'] || 'g++', "-x objective-c++ #{ENV['TM_OBJCXX_FLAGS'] || '-Wall -include stdio.h -include iostream -framework Cocoa'}", 'mm' ],
}

cc, flags, ext = *CONFIG['source.objc++'] # default
cc, flags, ext = *CONFIG[$&amp;] if ENV["TM_SCOPE"] =~ /\bsource\.(obj)?c(\+\+)?/

TextMate.save_current_document(ext)
TextMate::Executor.make_project_master_current_document
TextMate::Executor.run([ cc, flags, ENV["TM_FILEPATH"] ], :version_args =&gt; ["--version"], :version_regex =&gt; /\A([^\n]*) \(GCC\).*/m)
</string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@r</string>
	<key>name</key>
	<string>Run</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>scope</key>
	<string>source.c, source.c++, source.objc, source.objc++</string>
	<key>semanticClass</key>
	<string>action.run.c</string>
	<key>uuid</key>
	<string>E823A373-FFD6-42F1-998F-7571A3553847</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
